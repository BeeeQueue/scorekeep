version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:13
    working_directory: ~/app
    environment:
      JEST_JUNIT_OUTPUT_NAME: 'results.xml'
      JEST_JUNIT_ANCESTOR_SEPARATOR: ' > '

jobs:
  checkout_code:
    executor: node
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/app
          paths:
            - ./*

  dependencies:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            - yarn-packages-
      - run:
          name: Install NPM dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Bootstrap
          command: yarn lerna link
      - save_cache:
          name: Save Yarn Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/app
          paths:
            - node_modules
            - packages/*/node_modules

  constants_build:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/constants
          name: Build
          command: yarn run build
      - persist_to_workspace:
          root: ~/app
          paths:
            - packages/constants/dist

  ui_build:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/ui
          name: Build
          command: yarn run build

  server_build:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/server
          name: Build
          command: yarn run build

  ui_test:
    executor: node
    environment:
      JEST_JUNIT_OUTPUT_DIR: '../../test-results/ui_test'
      NODE_ENV: 'test'
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/ui
          name: Test
          command: yarn run test --ci --reporters=jest-junit --reporters=default
      - store_test_results:
          when: always
          path: test-results

  server_test:
    executor: node
    docker:
      - image: circleci/node:13
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: scorekeep-admin
          POSTGRES_PASSWORD: "ADAM's COOL"
    environment:
      JEST_JUNIT_OUTPUT_DIR: '../../test-results/server_test'
      NODE_ENV: 'test'
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/server
          name: Test
          command: yarn run test --ci --reporters=jest-junit --reporters=default
      - store_test_results:
          when: always
          path: test-results

  ui_lint:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/ui
          name: Lint
          command: yarn run lint -f junit -o ../../test-results/ui_lint/results.xml
      - store_test_results:
          when: always
          path: test-results

  server_lint:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/server
          name: Lint
          command: yarn run lint -f junit -o ../../test-results/server_lint/results.xml
      - store_test_results:
          when: always
          path: test-results

  server_breaking_changes:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          working_directory: ~/app/packages/server
          name: Check for changes in schema
          command: npx @graphql-inspector/cli diff git:origin/master:packages/server/src/graphql/snapshot.graphql src/graphql/snapshot.graphql

  deploy_storybook:
    executor: node
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Avoid unknown host for github
          command: mkdir ~/.ssh && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: 'git config --global user.email sayhi@circleci.com'
      - run: 'git config --global user.name CircleCI'
      - run:
          working_directory: ~/app/packages/ui
          name: Build Storybook
          command: yarn build-storybook
      - run:
          working_directory: ~/app/packages/ui
          name: Deploy to GH Pages
          command: yarn gh-pages -d .storybook/dist

workflows:
  version: 2
  build_test_lint:
    jobs:
      - checkout_code
      - dependencies:
          requires:
            - checkout_code
      - constants_build:
          requires:
            - dependencies
      - ui_build:
          requires:
            - constants_build
      - ui_test:
          requires:
            - constants_build
      - ui_lint:
          requires:
            - constants_build
      - server_build:
          requires:
            - constants_build
      - server_test:
          requires:
            - constants_build
      - server_lint:
          requires:
            - constants_build
      - server_breaking_changes:
          requires:
            - server_build
            - server_test
      - deploy_storybook:
          requires:
            - ui_build
            - ui_test
            - ui_lint
          filters:
            branches:
              only: master
