# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Boardgame {
  uuid: ID!
  type: GAME_TYPE!
  name: String!
  shortName: String!
  aliases: [String!]!

  """Link to boardgamegeek"""
  url: String
  rulebook: String
  minPlayers: Int!
  maxPlayers: Int!
  resultSchema: JSONObject!
}

type BoardgamesPage {
  items: [Boardgame!]!
  nextOffset: Int
  total: Int!
}

type Club {
  uuid: ID!
  name: String!
  members: [User!]!

  """A club owner must be a claimed player"""
  owner: User!
}

type Connection {
  uuid: ID!
  type: ConnectionService!
  user: User!
  serviceId: ID!
  name: String!
  email: String!
  image: String!
}

enum ConnectionService {
  GOOGLE
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FriendRequest {
  uuid: ID!
  initiator: User!
  receiver: UsersUnion!
}

enum GAME_TYPE {
  COLLABORATIVE
  COMPETITIVE
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Match {
  uuid: ID!
  club: Club!
  players: [User!]!
  winners: [User!]!
  game: Boardgame!
  results: JSONObject!
  date: DateTime!
}

type Mutation {
  addBoardgame(minPlayers: Int, rulebook: String, type: GAME_TYPE, url: String, aliases: [String!], resultSchema: JSONObject!, maxPlayers: Int!, shortName: String!, name: String!): Boardgame!
  addClub(name: String!): Club!

  """
  Disconnect from a service.
  _Requires login._
  """
  disconnect(uuid: ID!): User!
  addFriend(uuid: ID!): User!
  acceptFriendRequest(userUuid: ID!): User!
  addMatch(club: ID, game: ID!, results: JSONObject!): Match!

  """
  Update the name of the logged in user.
  _Requires login._
  """
  updateName(name: String!): User!

  """
  Create a new UnclaimedUser as a friend.
  _Requires login._
  """
  createFriend(name: String!): UnclaimedUser!

  """
  Create a User without a Connection.
  _Development only._
  """
  addUser(name: String!): User!

  """
  Gives a session cookie for the specified User.
  _Development only._
  """
  useUser(uuid: String!): Boolean!
}

type Query {
  boardgame(uuid: ID!): Boardgame
  boardgames(
    offset: Int = 0

    """Maximum 20"""
    limit: Int = 20
  ): BoardgamesPage!
  club(uuid: ID!): Club
  match(uuid: ID!): Match
  user(uuid: ID!): User
  users: [User!]
  viewer: User
}

type UnclaimedUser {
  uuid: ID!
  name: String!
  friends: [User!]!
  friendsSince: DateTime
}

type User {
  uuid: ID!
  name: String!
  clubs: [Club!]!
  connections: [Connection!]!
  mainConnection: Connection
  friendRequests: [FriendRequest!]!
  friends: [UsersUnion!]!
  friendsSince: DateTime
}

union UsersUnion = User | UnclaimedUser
